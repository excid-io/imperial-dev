@model Wallet.Models.CredentialOfferRequest

<h2 class="p-2 bg-light border rounded-1">Credentials</h2>
<hr />
<nav aria-label="breadcrumb">
    <ol class="breadcrumb">
        <li class="breadcrumb-item"><a asp-controller="Home" asp-action="Index">Home</a></li>
        <li class="breadcrumb-item"><a asp-action="Index">Credentials</a></li>
        <li class="breadcrumb-item active">New Credential</li>
    </ol>
</nav>
<div class="card mt-3" id="Add">
    <h5 class="card-header">Add new credential</h5>
    <div id="form" class="m-3">
        <form asp-action="Create">
            <input type="hidden" asp-for="PreAuthorizedCode" />
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="mb-3 row">
                <label for="issuerURL" class="col-sm-2 col-form-label">Credential Issuer</label>
                <div class="col-sm-4">
                    <input type="text" class="form-control" asp-for="IssuerURL" readonly />
                </div>
            </div>
            <div class="mb-3 row">
                <label for="credentialType" class="col-sm-2 col-form-label">Type</label>
                <div class="col-sm-4">
                    <input type="text" class="form-control" asp-for="CredentialType" readonly />
                </div>
            </div>
            <div class="mb-3 row">
                <label asp-for="AuthType" class="col-sm-2 col-form-label"></label>
                <div class="col-sm-4">
                    <select onchange="getAuthClaims()" asp-for="AuthType" asp-items="@Wallet.Models.CredentialOfferRequest.Types" class="form-select">
                    </select>
                </div>
            </div>
            <input type="submit" class="btn btn-primary" value="Add">
        </form>
    </div>
</div>

@section Scripts {
    <script>
        function getAuthClaims() {
            var type = document.getElementById("AuthType").value;
            if (type == 2) {
                var request = fetch('/Certificates/List').then((response) => {
                    response.text().then((data) => {
                        console.log(data)
                    })
                })
            }
        }
     </script>
}